#!/bin/bash

#Trevor Brooks
#Based on script designed by Kendall Schmit

#General precondition
	#If script will not run, make sure to run "chmod 744 ssRandomTest.sh"
	#Change the initials and names variables below to 
	#	match the initials of the student run being performed
	#Testing is ran by putting the following 
	#	into the shell "./ssRandomTestBTL.sh"

#Code file requirements
	#Code file should be named serviceStationLFM.cpp 
	#	where LFM matches the variable initials below.
	#Code file should be a valid cpp file and 
	#	should not require any other files to compile

#Test file requirements
	#Test files are generated by executable version of 
	#	./testGenerator/SSrandomTestBTL.cpp


#Output of this script
	#Input test files are generated into
	#My test results are saved to myRandomTestResultsBTL.txt
	#Michael Fryer's results are saved to otherRandomTestResults

#Change these vars/functions as tests change
initials=BTL
name="Trevor Brooks"
otherInitials=FMD
otherName="Michael Fryer"
exe=./mirror$initials
other_exe=./mirror$otherInitials
file_prefix="randomFiles/mirror"$initials
test_count=20
my_out_file="myRandomTestResults"$initials".txt"
other_out_file="otherRandomTestResults"$initials".txt"

in_file_name(){
    echo "$file_prefix"$(printf "%d" $1)"in.txt"
}
out_file_name(){
    echo "$file_prefix"$(printf "%d" $1)"out.txt"
}

#Main procedure:
#Compile my program
g++ -std=c++11 -c mirror$initials.cpp
g++ -o mirror$initials mirror$initials.o

#Compile test generator
g++ -std=c++11 -c testGenerator/randomMirror$initials.cpp
g++ -o randomMirror$initials randomMirror$initials.o

#Compile Michael's program
g++ -std=c++11 -c mirror$otherInitials.cpp
g++ -o mirror$otherInitials mirror$otherInitials.o

for ((i = 1; i <= test_count; i++))
do
    rm $(in_file_name $i)
    rm $(out_file_name $i)
done

./randomMirror$initials
#mv ssBTL* testGenerator/

rm mirror$initials.o
rm $my_out_file
echo "+++mirror"$initials" Random Test Run+++" >> $my_out_file
echo "Testing the file mirror"$initials".cpp by "$name >> $my_out_file
echo "" >> $my_out_file

for ((i = 1; i <= test_count; i++))
do
    echo "Input File: "$(in_file_name $i) >> $my_out_file
    result=$($exe <$(in_file_name $i))
    echo "Result: " >> $my_out_file
    echo "$result" >> $my_out_file
	echo "" >> $my_out_file
done

echo "---Mirror"$initials" Random Test Run---" >> $my_out_file


#Run tests for Michael's code
rm mirror$otherInitials.o
rm $other_out_file
echo "+++Mirror"$initials" Random Test Run+++" >> $other_out_file
echo "Testing the file Mirror"$otherInitials".cpp by "$otherName >> $other_out_file
echo "" >> $other_out_file

for ((i = 1; i <= test_count; i++))
do
    echo "Input File: "$(in_file_name $i) >> $other_out_file
    result=$($other_exe <$(in_file_name $i))
    echo "Result: " >> $other_out_file
    echo "$result" >> $other_out_file
	echo "" >> $other_out_file
done

echo "---Mirror"$initials" Random Test Run---" >> $other_out_file
